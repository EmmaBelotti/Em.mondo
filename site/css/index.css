html {
    height: 100%; /*altrimenti non funzia il gradiente*/
    font-family: verdana;
    max-width: 100vw; 
    overflow-x: hidden;

}

#mainpagelink { /*altrimenti esce il link da boomer sottolineato*/
    color: white;
    text-decoration: none;
    background-color: none;
}

a { /*altrimenti i link non si vedono */
    color:aqua;

}

@keyframes gradiente {
    0%{
        --color1: 100;
        --color2: 180;
    }

    50%{
        --color1: 180;
        --color2: 100;
    }

    100%{
        --color1: 100;
        --color2: 180;
    }
}

@keyframes colonne {
    0%{ background-position-y: 100em; }
    100%{ background-position-y: 0em; }
}

@property --color1 { /*controllano R del gradiente*/
    syntax: '<number>';
    initial-value: 100;
    inherits: false;
}

@property --color2 {
    syntax: '<number>';
    initial-value: 180;
    inherits: false;
}

@keyframes titlebox { /*controllano il colore del titlebox*/
    0%{
        background-color: rgba(180, 32, 188, 1);
    }

    50%{
        background-color: rgba(100, 32, 188, 1);
    }

    100%{
        background-color: rgba(180, 32, 188, 1);
    }
}

@keyframes eye { /*l'occhio si muove su e giù*/

    0%{ transform: translateY(0.25em); }
    50%{ transform: translateY(-0.5em); }
    100%{ transform: translateY(0.25em); }
}

@keyframes middleimage { 

    0%{ transform: translateY(0.2em); }
    50%{ transform: translateY(-0.4em); }
    100%{ transform: translateY(0.2em); }
}

body {
    overflow-x: clip;
    margin: 0;
    display: flex;
    flex-direction: column;
    position: relative;
    height:100%;
    max-width: 100vw;
    animation: gradiente 8s infinite;
    background-image: linear-gradient(rgb(var(--color1, 100),32,188), rgb(var(--color2, 180),32,188), rgb(var(--color1, 100),32,188));
    color: white; /*per il testo*/
    justify-content: center;
    align-content: center;
    
}

#titlebox {
    overflow-x: hidden ;
    display: flex;
    gap: 1%;
    animation: titlebox 8s infinite;
    background-color: rgba(180, 32, 188, 1);
    border-width: 2px;
    border-style: hidden hidden solid hidden; /*solo al lato inferiore*/
    border-color: #ffc20e;
    position: fixed; /* sta fermo */
    top: 0; 
    width: 100vw;
    height: max(2.7em, 10vh);
    z-index: 4;
    justify-content: center;
    align-content: center;
}

#title {
    display: flex;
    height: 100%;
    flex-direction: column;
    justify-content: center;
    align-content: center;
    font-family: Lugrasimo, Verdana;
    font-size: 2.6em;
}

#sfondo {
    max-width: 100vw;
    background-color: rgba(28, 24, 55, 0.3); /*dark slate blue con trasparenza*/
    background-image: url("../file/img/column.png"), url("../file/img/column_F.png"); /*../ torna alla cartella precedente*/
    background-repeat: repeat-y, repeat-y; /*colonne*/
    background-position-x: left, right;
    animation: colonne 50s infinite linear;
    position: absolute;
    align-self: center;
    top: max(2.7em, 10%);
    height: max(max-content, 100%);
    width: 80%;
    padding: 1em calc(16px + 1em) 1em calc(16px + 1em); /*16px sono le colonne*/
}

#eyebox {
    display: flex;
    justify-content: center;
    align-content: center;
    position: relative;
    height: 24em;
    max-width: 100vw;
}

#eyeopen{
    animation: eye 6s infinite;
    position:absolute;
    z-index: 2; /*sta cosa perchè open è prima di closed ma è sotto ad esso e posso usare ~ solo per gli elementi successivi*/
}

#eyeclosed {
    opacity: 0;
    animation: eye 6s infinite;
    position:absolute; 
    z-index: 1;
}

#eyeopen:hover{ /*solo eyeclosed legge perchè è sopra*/
    opacity: 0;
}

#eyeopen:hover ~ #eyeclosed { /*perchè closed è sotto e hover non lo legge, l'ordine contrario non funziona, che bel linguaggio css*/
    opacity: 1;
}

.middleimage {
    animation: middleimage 6s infinite;
    object-fit: cover;
    max-width: max(280px, 25cqw); /*cqw e' una percentuale della grandezza del contenitore*/
    max-height: max(280px, 25cqw);
    border-width: 2px;
    border-style: solid;
    border-color: #ffc20e;
    border-radius: 1%;
}

.textparagraph{ /*tiene una immagine e un argomento*/
    flex-wrap: wrap;
    margin-left: 0,5em;
    margin-right: 0,5em;
    display:flex;
    height:fit-content;
    justify-content: center;
    gap: 1em;
    align-content: center;

}

#celeste {
    color: aqua;

}

#celestetooltip {
    opacity:0;
}

#celeste:hover ~ #celestetooltip { /*hovering celeste shows the tooltip*/
    opacity:1;
}

#eyeopen:hover ~ #handL {
    transform: translateX(max(80vw, 400px)); /*usa la larghezza del contenitore*/
    transition: all 7s;

}

#eyeopen:hover ~ #handR {
    transform: translateX(min(-80vw, -400px));
    transition: all 7s;
}

#handL {
    position:absolute;
    transform-origin: right;
    transition: all 1.5s;
    left:min(-100vw, -700px); /*fuori dallo schermo o si toglie per la sua dimensione e un po più*/
    z-index: 1;
    width: calc(1254px / 2);
    height: calc(688px / 2); 
}

#handR {
    position:absolute;
    transform-origin: left;
    transition: all 1.5s;
    right:min(-100vw, -700px);
    bottom:-20%;
    width: calc(1280px / 2);
    height: calc(749px / 2); 
}

#ctrlz {
    color:rgb(219, 12, 230);
}

.mistake {
    opacity: 1;
    color:grey;
}

#ctrlz:hover ~ .mistake{
    opacity:0;
}

#guide {
    color:red;
}

#guidetarget {
    opacity: 0;
}

#guide:hover ~ #guidetarget {
    opacity: 1;
}